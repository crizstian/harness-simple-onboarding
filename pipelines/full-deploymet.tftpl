pipeline:
  name: ${name}
  identifier: ${identifier}
  projectIdentifier: ${project_id}
  orgIdentifier: ${org_id}
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.cristian_github
        repoName: harness-cie-lab
        build: <+input>
  stages:
    - stage:
        name: build
        identifier: build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.cristian_kubernetes_cluster
              namespace: default
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - step:
                  type: RestoreCacheGCS
                  name: RestoreCacheGCS
                  identifier: RestoreCacheGCS
                  spec:
                    connectorRef: account.cristian_GCP
                    bucket: crizstian-terraform
                    key: <+pipeline.name>
                    archiveFormat: Tar
                    failIfKeyNotFound: true
                  failureStrategies:
                    - onFailure:
                        errors:
                          - AllErrors
                        action:
                          type: Ignore
                  when:
                    stageStatus: Success
              - step:
                  type: RunTests
                  name: pruebas unitarias
                  identifier: pruebas_unitarias
                  spec:
                    connectorRef: account.cristian_docker
                    image: nikpap/mvn-openjdk-8:harness
                    language: Java
                    buildTool: Maven
                    args: test
                    packages: com.nikp
                    runOnlySelectedTests: true
                    preCommand: cd payment-service
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - "**/*.xml"
                    resources:
                      limits:
                        memory: 2Gi
                        cpu: "2"
                    enableTestSplitting: false
              - step:
                  type: Run
                  name: build
                  identifier: build
                  spec:
                    connectorRef: account.cristian_docker
                    image: nikpap/mvn-openjdk-8:harness
                    shell: Sh
                    command: |
                      cd payment-service
                      mvn -Dmaven.test.skip=true clean install -X
                      ls -la
                    privileged: true
                    resources:
                      limits:
                        memory: 1Gi
                        cpu: "1"
              - step:
                  type: Owasp
                  name: Owasp
                  identifier: Owasp
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      name: payment-service
                      type: repository
                      variant: <+codebase.branch>
                      workspace: /harness/payment-service
                    advanced:
                      log:
                        level: info
                      fail_on_severity: none
                    resources:
                      limits:
                        memory: 1Gi
                        cpu: "1"
                  timeout: 15m
                  failureStrategies:
                    - onFailure:
                        errors:
                          - AllErrors
                        action:
                          type: Ignore
                  when:
                    stageStatus: Success
                    condition: "true"
              - step:
                  type: Sonarqube
                  name: Sonarqube
                  identifier: Sonarqube
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: repository
                      name: <+pipeline.name>
                      variant: <+codebase.branch>
                    advanced:
                      log:
                        level: info
                    auth:
                      access_token: sqp_ee3594d71d48e8cad1c6a1af8765f7210e0eb5f3
                      domain: http://sonarqube.citibanamex.harness-demo.site
                      ssl: false
                    tool:
                      java:
                        binaries: "**/target/classes"
                      project_key: harness-lab
                  when:
                    stageStatus: Success
                    condition: "false"
              - step:
                  type: BuildAndPushDockerRegistry
                  name: BuildAndPushDocker
                  identifier: BuildAndPushDocker
                  spec:
                    connectorRef: account.cristian_docker
                    repo: crizstian/payment-service-workshop
                    tags:
                      - <+pipeline.sequenceId>.0
                    resources:
                      limits:
                        memory: 1Gi
                        cpu: "1"
              - step:
                  type: SaveCacheGCS
                  name: SaveCacheGCS
                  identifier: SaveCacheGCS
                  spec:
                    connectorRef: account.cristian_GCP
                    bucket: crizstian-terraform
                    key: <+pipeline.name>
                    sourcePaths:
                      - /root/.m2
                    archiveFormat: Tar
                  when:
                    stageStatus: Success
                  failureStrategies:
                    - onFailure:
                        errors:
                          - AllErrors
                        action:
                          type: Ignore
          caching:
            enabled: false
            paths: []
    - stage:
        name: deploy
        identifier: deploy
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: ${service_id}
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  manifests:
                    - manifest:
                        identifier: manifiesto
                        type: K8sManifest
                        spec:
                          valuesPaths: <+input>
                  artifacts:
                    primary:
                      primaryArtifactRef: Docker
                      sources:
                        - identifier: Docker
                          type: DockerRegistry
                          spec:
                            tag: <+pipeline.stages.build.spec.execution.steps.BuildAndPushDocker.artifact_BuildAndPushDocker.stepArtifacts.publishedImageArtifacts[0].tag>
          environment:
            environmentRef: DEV
            deployToAll: false
            infrastructureDefinitions:
              - identifier: gkeecommdev
          execution:
            steps:
              - step:
                  type: JiraCreate
                  name: Generacion Ticket
                  identifier: Generacion_Ticket
                  spec:
                    connectorRef: account.Harness_JIRA
                    projectKey: SE
                    issueType: Story
                    fields:
                      - name: Comment
                        value: test
                      - name: Description
                        value: testing
                      - name: Summary
                        value: Test
                  timeout: 10m
              - stepGroup:
                  name: Canary Deployment
                  identifier: canaryDepoyment
                  steps:
                    - step:
                        name: Canary Deployment
                        identifier: canaryDeployment
                        type: K8sCanaryDeploy
                        timeout: 10m
                        spec:
                          instanceSelection:
                            type: Count
                            spec:
                              count: 3
                          skipDryRun: false
                    - parallel:
                        - step:
                            type: Http
                            name: Http Validation
                            identifier: Http_Request
                            spec:
                              url: http://<+<+pipeline.variables.seusername>+"."+<+pipeline.variables.dns>>
                              method: GET
                              headers: []
                              inputVariables: []
                              outputVariables: []
                              assertion: <+httpResponseCode> == 200
                            timeout: 30s
                            failureStrategies:
                              - onFailure:
                                  errors:
                                    - AllErrors
                                  action:
                                    type: Ignore
                        - step:
                            type: Verify
                            name: Verify
                            identifier: Verify
                            spec:
                              isMultiServicesOrEnvs: false
                              type: Canary
                              monitoredService:
                                type: Default
                                spec: {}
                              spec:
                                sensitivity: MEDIUM
                                duration: 15m
                            timeout: 2h
                            failureStrategies:
                              - onFailure:
                                  errors:
                                    - Verification
                                  action:
                                    type: ManualIntervention
                                    spec:
                                      timeout: 2h
                                      onTimeout:
                                        action:
                                          type: StageRollback
                              - onFailure:
                                  errors:
                                    - Unknown
                                  action:
                                    type: ManualIntervention
                                    spec:
                                      timeout: 2h
                                      onTimeout:
                                        action:
                                          type: Ignore
                    - step:
                        type: HarnessApproval
                        name: Aprovacion
                        identifier: Aprovacion
                        spec:
                          approvalMessage: Please review the following information and approve the pipeline progression
                          includePipelineExecutionHistory: true
                          isAutoRejectEnabled: false
                          approvers:
                            userGroups:
                              - account._account_all_users
                            minimumCount: 1
                            disallowPipelineExecutor: false
                          approverInputs: []
                        timeout: 10m
                        failureStrategies:
                          - onFailure:
                              errors:
                                - AllErrors
                              action:
                                type: MarkAsSuccess
                    - step:
                        type: JiraUpdate
                        name: Actualizacion de Ticket
                        identifier: Actualizacion_de_Ticket
                        spec:
                          connectorRef: account.Harness_JIRA
                          issueKey: <+pipeline.stages.deploy.spec.execution.steps.Generacion_Ticket.issue.key>
                          fields:
                            - name: Comment
                              value: Despliegue Autorizado
                        timeout: 10m
                    - step:
                        name: Canary Delete
                        identifier: canaryDelete
                        type: K8sCanaryDelete
                        timeout: 10m
                        spec: {}
              - stepGroup:
                  name: Primary Deployment
                  identifier: primaryDepoyment
                  steps:
                    - step:
                        name: Rolling Deployment
                        identifier: rollingDeployment
                        type: K8sRollingDeploy
                        timeout: 10m
                        spec:
                          skipDryRun: false
              - step:
                  type: JiraUpdate
                  name: Cierre de Ticket
                  identifier: Cierre_de_Ticket
                  spec:
                    connectorRef: account.Harness_JIRA
                    issueKey: <+pipeline.stages.deploy.spec.execution.steps.Generacion_Ticket.issue.key>
                    fields:
                      - name: Comment
                        value: Despliegue Finalizado
                  timeout: 10m
            rollbackSteps:
              - step:
                  name: Canary Delete
                  identifier: rollbackCanaryDelete
                  type: K8sCanaryDelete
                  timeout: 10m
                  spec: {}
              - step:
                  name: Rolling Rollback
                  identifier: rollingRollback
                  type: K8sRollingRollback
                  timeout: 10m
                  spec: {}
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
  variables:
    - name: seusername
      type: String
      description: ""
      required: false
      value: <+input>
    - name: clientkey
      type: String
      description: ""
      required: false
      value: 5a2bffab-9c62-4ab5-8331-924f7cb9b18a
    - name: serverkey
      type: String
      description: ""
      required: false
      value: 6ba9e97a-a386-42c7-ae91-1bdc39ae7cd3
    - name: dns
      type: String
      description: ""
      required: false
      value: <+input>
  allowStageExecutions: true
  flowControl:
    barriers:
      - name: dev
        identifier: dev
      - name: ff dev
        identifier: ff_dev
