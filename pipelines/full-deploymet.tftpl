pipeline:
  name: ${name}
  identifier: ${identifier}
  projectIdentifier: ${project_id}
  orgIdentifier: ${org_id}
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: ${github_connector}
        repoName: ${github_repo}
        build: <+input>
  stages:
    - stage:
        name: build
        identifier: build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: ${build_infrastructure}
              namespace: default
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - step:
                  type: RestoreCacheGCS
                  name: RestoreCacheGCS
                  identifier: RestoreCacheGCS
                  spec:
                    connectorRef: ${gcp_connector}
                    bucket: ${gcs_bucket}
                    key: <+pipeline.name>
                    archiveFormat: Tar
                    failIfKeyNotFound: true
                  failureStrategies:
                    - onFailure:
                        errors:
                          - AllErrors
                        action:
                          type: Ignore
                  when:
                    stageStatus: Success
              - step:
                  type: RunTests
                  name: pruebas unitarias
                  identifier: pruebas_unitarias
                  spec:
                    connectorRef: ${docker_connector}
                    image: nikpap/mvn-openjdk-8:harness
                    language: Java
                    buildTool: Maven
                    args: test
                    packages: com.nikp
                    runOnlySelectedTests: true
                    preCommand: cd payment-service
                    reports:
                      type: JUnit
                      spec:
                        paths:
                          - "**/*.xml"
                    resources:
                      limits:
                        memory: 2Gi
                        cpu: "2"
                    enableTestSplitting: false
              - step:
                  type: Run
                  name: build
                  identifier: build
                  spec:
                    connectorRef: ${docker_connector}
                    image: nikpap/mvn-openjdk-8:harness
                    shell: Sh
                    command: |
                      cd payment-service
                      mvn -Dmaven.test.skip=true clean install -X
                      ls -la
                    privileged: true
                    resources:
                      limits:
                        memory: 1Gi
                        cpu: "1"
              - step:
                  type: Owasp
                  name: Owasp
                  identifier: Owasp
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      name: payment-service
                      type: repository
                      variant: <+codebase.branch>
                      workspace: /harness/payment-service
                    advanced:
                      log:
                        level: info
                      fail_on_severity: none
                    resources:
                      limits:
                        memory: 1Gi
                        cpu: "1"
                  timeout: 15m
                  failureStrategies:
                    - onFailure:
                        errors:
                          - AllErrors
                        action:
                          type: Ignore
                  when:
                    stageStatus: Success
                    condition: "true"
              - step:
                  type: Sonarqube
                  name: Sonarqube
                  identifier: Sonarqube
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: repository
                      name: <+pipeline.name>
                      variant: <+codebase.branch>
                    advanced:
                      log:
                        level: info
                    auth:
                      access_token: sqp_ee3594d71d48e8cad1c6a1af8765f7210e0eb5f3
                      domain: http://sonarqube.citibanamex.harness-demo.site
                      ssl: false
                    tool:
                      java:
                        binaries: "**/target/classes"
                      project_key: harness-lab
                  when:
                    stageStatus: Success
                    condition: "false"
              - step:
                  type: BuildAndPushDockerRegistry
                  name: BuildAndPushDocker
                  identifier: BuildAndPushDocker
                  spec:
                    connectorRef: ${docker_connector}
                    repo: crizstian/payment-service-workshop
                    tags:
                      - <+pipeline.sequenceId>.0
                    resources:
                      limits:
                        memory: 1Gi
                        cpu: "1"
              - step:
                  type: SaveCacheGCS
                  name: SaveCacheGCS
                  identifier: SaveCacheGCS
                  spec:
                    connectorRef: ${gcp_connector}
                    bucket: ${gcs_bucket}
                    key: <+pipeline.name>
                    sourcePaths:
                      - /root/.m2
                    archiveFormat: Tar
                  when:
                    stageStatus: Success
                  failureStrategies:
                    - onFailure:
                        errors:
                          - AllErrors
                        action:
                          type: Ignore
          caching:
            enabled: false
            paths: []
  variables:
    - name: seusername
      type: String
      description: ""
      required: false
      value: <+input>
    - name: clientkey
      type: String
      description: ""
      required: false
      value: 5a2bffab-9c62-4ab5-8331-924f7cb9b18a
    - name: serverkey
      type: String
      description: ""
      required: false
      value: 6ba9e97a-a386-42c7-ae91-1bdc39ae7cd3
    - name: dns
      type: String
      description: ""
      required: false
      value: <+input>
  allowStageExecutions: true
  flowControl:
    barriers:
      - name: dev
        identifier: dev
      - name: ff dev
        identifier: ff_dev
